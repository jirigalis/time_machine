// Generated by LiveScript 1.3.0
(function(){
  var module, x$;
  module = {};
  (function(module){
    var d3Color, ret;
    if (typeof require != 'undefined' && require !== null) {
      d3Color = require('d3-color');
    }
    ret = {
      name: "HUD",
      desc: "head-up display style that fits perfectly with your futuristic design",
      tags: ['interface', 'hud', 'futuristic', 'game', 'technology', 'military'],
      slug: "futuristic-game-interface-preloader",
      init: function(){},
      usepal: function(config, pal){},
      config: {
        'speed': 4,
        'background': 'rgba(255,255,255,0%)',
        'size': 200,
        'c1': '#8dc640',
        'c2': '#34ace2',
        'c3': '#900',
        'c4': '#34ace2',
        'dir': 'interlace',
        'speed1': 2,
        'speed2': 1.332,
        'v1': '0 53.064 52;360 53.064 52',
        'v2': '360 53.064 52;0 53.064 52'
      },
      id: 'hud',
      support: {
        svg: true
      },
      license: 'RF',
      settings: {
        background: '#1e2c24',
        pal: ["HUD", ['#799b79', '#2accfc', '#d9534f', '#39ff39']]
      },
      edit: {
        c1: {
          name: "Grid Color",
          type: 'color',
          'default': '#8dc640'
        },
        c2: {
          name: "Curve Color",
          type: 'color',
          'default': '#34ace2'
        },
        c3: {
          name: "Crosshair Color",
          type: 'color',
          'default': '#900'
        },
        c4: {
          name: "Annotate Color",
          type: 'color',
          'default': '#34ace2'
        },
        dir: {
          name: "Spin Dir",
          type: 'choice',
          values: ['normal', 'reverse', 'interlace'],
          'default': 'interlace'
        },
        speed: {
          'default': 4
        }
      },
      watch: function(n, o){
        var v1, v2, ref$;
        n.speed1 = n.speed * 0.5;
        n.speed2 = n.speed * 0.333;
        v1 = "0 53.064 52;360 53.064 52";
        v2 = "360 53.064 52;0 53.064 52";
        if (n.dir === 'normal') {
          ref$ = [v1, v1], n.v1 = ref$[0], n.v2 = ref$[1];
        } else if (n.dir === 'reverse') {
          ref$ = [v2, v2], n.v1 = ref$[0], n.v2 = ref$[1];
        } else if (n.dir === 'interlace') {
          ref$ = [v1, v2], n.v1 = ref$[0], n.v2 = ref$[1];
        }
        return n;
      },
      dom: function(config){
        return "";
      },
      step: function(){}
    };
    if (module != null) {
      return module.exports = ret;
    }
  })(module);
  x$ = angular.module('loadingIO');
  x$.factory("lds-" + module.exports.id, ['$interval'].concat(function($interval){
    return module.exports;
  }));
  return x$;
})();